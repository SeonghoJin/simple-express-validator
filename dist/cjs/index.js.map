{"mappings":"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","sources":["src/index.ts","src/body/index.ts","src/body/body/body.ts","src/util/createErrorMessage.ts","src/body/boolean/boolean.ts","src/util/index.ts","src/util/get.ts","src/body/notEmptyString/notEmptyString.ts","src/body/string/string.ts","src/body/number/number.ts","src/body/object/object.ts"],"sourcesContent":["export * from './body';\n","export * from './body/body';\nexport * from './boolean/boolean'\nexport * from './notEmptyString/notEmptyString';\nexport * from './number/number';\nexport * from './object/object';\nexport * from './string/string';\n","import { RequestLike } from '../../types/express';\nimport { createErrorMessage } from '../../util/createErrorMessage';\n\nexport const getBody = (req: RequestLike) => {\n  const body = req.body;\n  if (body === null || body === undefined) {\n    throw new TypeError(createErrorMessage('body', body, 'this is null or undefined'));\n  }\n  return body;\n};\n","export const createErrorMessage = (path: string, property: any, message: string) => {\n  return `${path}(${property}), ${message}`;\n};\n","import { RequestLike } from '../../types/express';\nimport { getProperty } from '../../util';\nimport { createErrorMessage } from '../../util/createErrorMessage';\nimport { getBody } from '../body/body';\n\ntype GetBooleanOptions = {\n    pipe?: boolean;\n};\n\nexport const getBoolean = (req: RequestLike, path: string, option?: GetBooleanOptions) => {\n    const body = getBody(req);\n    const property = getProperty(body, path);\n    let convertedProperty = property;\n\n    if (property === null || property === undefined) {\n        throw new TypeError(createErrorMessage(path, property, 'this is null or undefined'));\n    }\n\n    if (typeof property === 'string') {\n        const lowercaseProperty = property.toLowerCase();\n        if (\n            lowercaseProperty !== 'true' &&\n            lowercaseProperty !== 'false' &&\n            lowercaseProperty !== '0' &&\n            lowercaseProperty !== '1'\n        ) {\n            throw new TypeError(createErrorMessage(path, property, 'this is not boolean'));\n        } else {\n            convertedProperty = lowercaseProperty === 'true' || lowercaseProperty === '1';\n        }\n        return option?.pipe ? convertedProperty : property;\n    }\n\n    if (typeof property === 'number') {\n        if (property !== 1 && property !== 0) {\n            throw new TypeError(createErrorMessage(path, property, 'this is not boolean'));\n        } else {\n            convertedProperty = property === 1;\n        }\n        return option?.pipe ? convertedProperty : property;\n    }\n\n    if (typeof property !== 'boolean') {\n        throw new TypeError(createErrorMessage(path, property, 'this is not boolean'));\n    }\n\n    return option?.pipe ? convertedProperty : property;\n};\n","export * from './get';\n","export { get as getProperty } from 'lodash';\n","import { RequestLike } from '../../types/express';\nimport { createErrorMessage } from '../../util/createErrorMessage';\nimport { getString } from '../string/string';\n\ntype GetNotEmptyStringOption = {\n  ignoreWhiteSpace: boolean;\n};\n\nexport const getNotEmptyString = (req: RequestLike, path: string, option?: GetNotEmptyStringOption) => {\n  const property = getString(req, path);\n  const validProp = option?.ignoreWhiteSpace ? property.trim() : property;\n  if (validProp === '') {\n    throw new TypeError(createErrorMessage(path, property, 'this is empty string'));\n  }\n  return property;\n};\n","import { getBody } from '../body/body';\nimport { getProperty } from '../../util';\nimport { createErrorMessage } from '../../util/createErrorMessage';\nimport { RequestLike } from '../../types/express';\n\nexport const getString = (req: RequestLike, path: string) => {\n  const body = getBody(req);\n  const property = getProperty(body, path);\n\n  if (typeof property !== 'string') {\n    throw new TypeError(createErrorMessage(path, property, 'this is not string'));\n  }\n\n  return property;\n};\n","import { RequestLike } from '../../types/express';\nimport { getProperty } from '../../util';\nimport { createErrorMessage } from '../../util/createErrorMessage';\nimport { getBody } from '../body/body';\n\ntype GetNumberOptions = {\n    pipe?: boolean;\n};\n\nexport const getNumber = (req: RequestLike, path: string, option?: GetNumberOptions) => {\n    const body = getBody(req);\n    const property = getProperty(body, path);\n    const convertedProperty = Number(property);\n\n    if (property === null || property === undefined) {\n        throw new TypeError(createErrorMessage(path, property, 'this is null or undefined'));\n    }\n\n    if (Number.isNaN(convertedProperty)) {\n        throw new TypeError(createErrorMessage(path, property, 'this is Nan'));\n    }\n\n    if (typeof convertedProperty !== 'number') {\n        throw new TypeError(createErrorMessage(path, property, 'this is not number'));\n    }\n\n    return option?.pipe ? convertedProperty : property;\n};\n","import { RequestLike } from '../../types/express';\nimport { getProperty } from '../../util';\nimport { createErrorMessage } from '../../util/createErrorMessage';\nimport { getBody } from '../body/body';\n\nexport const getObject = (req: RequestLike, path: string) => {\n    const body = getBody(req);\n    const property = getProperty(body, path);\n\n    if (property === null || property === undefined) {\n        throw new TypeError(createErrorMessage(path, property, 'this is null or undefined'));\n    }\n\n    if (typeof property !== 'object') {\n        throw new TypeError(createErrorMessage(path, property, 'this is not object'));\n    }\n\n    return property;\n};\n"],"names":[],"version":3,"file":"index.js.map"}